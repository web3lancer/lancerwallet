import { type Models } from 'node-appwrite';

// This file is auto-generated by the Appwrite CLI. 
// You can regenerate it by running `appwrite types ./types`.

export enum AccountStatus {
    ACTIVE = "active",
    SUSPENDED = "suspended",
    DELETED = "deleted"
}

export enum DeviceType {
    PLATFORM = "platform",
    CROSS_PLATFORM = "cross-platform"
}

export type Users = Models.Document & {
    userId: string;
    email: string;
    displayName: string | null;
    profileImage: string | null;
    lastLogin: string | null;
    accountStatus: AccountStatus;
    createdAt: string;
    updatedAt: string;
}

export type Wallets = Models.Document & {
    walletId: string;
    userId: string;
    address: string;
    name: string;
    network: string;
    encryptedWalletData: string;
    walletType: string;
    isActive: boolean;
    createdAt: string;
    updatedAt: string;
}

export type Transactions = Models.Document & {
    transactionId: string;
    userId: string;
    walletId: string;
    hash: string;
    fromAddress: string;
    toAddress: string;
    value: string;
    network: string;
    status: string;
    type: string;
    timestamp: string;
    notes: string | null;
    createdAt: string;
    updatedAt: string;
}

export type Tokens = Models.Document & {
    tokenId: string;
    userId: string;
    walletId: string;
    contractAddress: string;
    symbol: string;
    name: string;
    decimals: number;
    balance: string;
    network: string;
    isNative: boolean;
    isActive: boolean;
    createdAt: string;
    updatedAt: string;
}

export type NfTs = Models.Document & {
    nftId: string;
    userId: string;
    walletId: string;
    contractAddress: string;
    tokenId: string;
    name: string;
    description: string | null;
    imageStorageId: string | null;
    collection: string;
    standard: string;
    network: string;
    metadata: string | null;
    isActive: boolean;
    createdAt: string;
    updatedAt: string;
}

export type WebAuthnCredentials = Models.Document & {
    credentialId: string;
    userId: string;
    publicKey: string;
    counter: number;
    deviceName: string | null;
    deviceType: DeviceType | null;
    isActive: boolean;
    lastUsed: string | null;
    createdAt: string;
    updatedAt: string;
}

export type DeFiPositions = Models.Document & {
    positionId: string;
    userId: string;
    walletId: string;
    protocol: string;
    positionType: string;
    contractAddress: string;
    tokenA: string | null;
    tokenB: string | null;
    amount: string;
    network: string;
    isActive: boolean;
    createdAt: string;
    updatedAt: string;
}

export type AppSettings = Models.Document & {
    settingId: string;
    key: string;
    value: string;
    category: string;
    description: string | null;
    isPublic: boolean;
    createdAt: string;
    updatedAt: string;
}

export type UserSettings = Models.Document & {
    settingId: string;
    userId: string;
    theme: string;
    currency: string;
    language: string;
    defaultNetwork: string;
    notifications: string;
    security: string;
    advanced: string | null;
    createdAt: string;
    updatedAt: string;
}

export type PriceAlerts = Models.Document & {
    alertId: string;
    userId: string;
    symbol: string;
    contractAddress: string | null;
    network: string;
    alertType: string;
    targetPrice: number | null;
    changePercent: number | null;
    currentPrice: number | null;
    isActive: boolean;
    triggered: boolean;
    triggeredAt: string | null;
    createdAt: string;
    updatedAt: string;
}

export type HardwareWallets = Models.Document & {
    hardwareWalletId: string;
    userId: string;
    deviceType: string;
    deviceModel: string | null;
    deviceId: string;
    publicKey: string;
    derivationPath: string;
    addresses: string;
    name: string;
    isActive: boolean;
    lastConnected: string | null;
    createdAt: string;
    updatedAt: string;
}

export type PluginConfigurations = Models.Document & {
    configId: string;
    userId: string;
    pluginId: string;
    pluginName: string;
    version: string;
    enabled: boolean;
    configuration: string;
    permissions: string | null;
    lastUsed: string | null;
    createdAt: string;
    updatedAt: string;
}

export type Backups = Models.Document & {
    backupId: string;
    userId: string;
    fileId: string;
    backupType: string;
    timestamp: string;
    size: number;
    notes: string | null;
}

export type Nonces = Models.Document & {
    nonceId: string;
    key: string;
    nonce: string;
    expiresAt: string;
    used: boolean;
    createdAt: string;
}

export type Networks = Models.Document & {
    key: string;
    name: string;
    chainId: number | null;
    type: string;
    rpcUrl: string | null;
    explorerUrl: string | null;
    nativeSymbol: string | null;
    enabled: boolean;
    order: number | null;
    metadata: string | null;
}

export type Languages = Models.Document & {
    code: string;
    name: string;
    enabled: boolean;
    order: number | null;
}

export type Currencies = Models.Document & {
    code: string;
    symbol: string;
    name: string;
    decimals: number;
    enabled: boolean;
    order: number | null;
}

export type TokenStandards = Models.Document & {
    key: string;
    name: string;
    enabled: boolean;
    order: number | null;
}

export type AlertTypes = Models.Document & {
    key: string;
    name: string;
    enabled: boolean;
    order: number | null;
}
